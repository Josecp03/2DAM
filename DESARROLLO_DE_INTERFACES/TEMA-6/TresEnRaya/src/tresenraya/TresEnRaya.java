/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tresenraya;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JOptionPane;

/**
 *
 * @author josec
 */
public class TresEnRaya extends javax.swing.JFrame {

    // Atributos
    private JButton[] botones;
    private boolean[] marcados;
    private int contadorMarcados = 0;
    private String[] iconosEstablecidos;
    private boolean juegoEnCurso = true;

    public TresEnRaya() {

        // Inicializar los componentes
        initComponents();

        // Incapacitar al usuario para redimensionar el tamaño de la interfaz
        setResizable(false);

        // Centrar la interfaz en medio de la pantalla
        setLocationRelativeTo(null);

        // Establecer el icono de la interfaz
        this.setIconImage(new ImageIcon(getClass().getResource("/imgs/logo.png")).getImage());
        
        // Inicializar arrays
        botones = new JButton[]{jButton1, jButton2, jButton3, jButton4, jButton5, jButton6, jButton7, jButton8, jButton9};
        marcados = new boolean[]{false, false, false, false, false, false, false, false, false};
        iconosEstablecidos = new String[]{"", "", "", "", "", "", "", "", ""};

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new java.awt.GridLayout(3, 3, 10, 10));

        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);

        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);

        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3);

        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4);

        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5);

        jButton6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton6);

        jButton7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton7);

        jButton8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton8);

        jButton9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton9);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        int indice = 0;

        marcarCasillas(indice);

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        int indice = 2;

        marcarCasillas(indice);

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        int indice = 1;

        marcarCasillas(indice);

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        int indice = 3;

        marcarCasillas(indice);

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

        int indice = 4;

        marcarCasillas(indice);

    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed

        int indice = 5;

        marcarCasillas(indice);


    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed

        int indice = 6;

        marcarCasillas(indice);

    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed

        int indice = 7;

        marcarCasillas(indice);

    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed

        int indice = 8;

        marcarCasillas(indice);

    }//GEN-LAST:event_jButton9ActionPerformed

    private void marcarCasillas(int indice) {

        // Comprobar que el botón no esté marcado
        if (!marcados[indice]) {

            // Actualizar el estado del botón
            marcados[indice] = true;

            // Establecer el icono de la cruz donde el usuario ha pulsado
            botones[indice].setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/cruz.png")));

            // Establecer que icono se ha establecido en ese botón
            iconosEstablecidos[indice] = "Cruz";

            // Inicializar variable booleana
            boolean botonRandomMarcado = false;

            // Aumentar contador
            contadorMarcados++;

            comprobarVictoria();

            // Si ya se han marcado todas las casillas, no hacer nada más
            if (contadorMarcados == 9) {
                return;
            }

            // Bucle hasta que se marce un botón aleatorio
            do {

                // Generar un número aleatorio de 0 a 8 
                int indiceRandom = (int) (Math.random() * 9);

                // Comprobar que el botón con ese índice no esté ya marcado
                if (!marcados[indiceRandom]) {

                    // Actualizar el estado del botón
                    marcados[indiceRandom] = true;

                    // Establecer el icono de la circunferencia en el botón aleatorio
                    botones[indiceRandom].setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/circunferencia.png")));

                    // Establecer que icono se ha establecido en ese botón
                    iconosEstablecidos[indiceRandom] = "Circunferencia";

                    // Actualizar el valor de la variable booleana
                    botonRandomMarcado = true;

                    // Aumentar contador
                    contadorMarcados++;

                    comprobarVictoria();

                }

            } while (!botonRandomMarcado);

        }

    }

    private void comprobarVictoria() {

        if (!juegoEnCurso) {
            return;
        }

        // Comprobar si has ganado
        if (iconosEstablecidos[0].equals("Cruz") && iconosEstablecidos[1].equals("Cruz") && iconosEstablecidos[2].equals("Cruz")
                || iconosEstablecidos[3].equals("Cruz") && iconosEstablecidos[4].equals("Cruz") && iconosEstablecidos[5].equals("Cruz")
                || iconosEstablecidos[6].equals("Cruz") && iconosEstablecidos[7].equals("Cruz") && iconosEstablecidos[8].equals("Cruz")
                || iconosEstablecidos[0].equals("Cruz") && iconosEstablecidos[3].equals("Cruz") && iconosEstablecidos[6].equals("Cruz")
                || iconosEstablecidos[1].equals("Cruz") && iconosEstablecidos[4].equals("Cruz") && iconosEstablecidos[7].equals("Cruz")
                || iconosEstablecidos[2].equals("Cruz") && iconosEstablecidos[5].equals("Cruz") && iconosEstablecidos[8].equals("Cruz")
                || iconosEstablecidos[0].equals("Cruz") && iconosEstablecidos[4].equals("Cruz") && iconosEstablecidos[8].equals("Cruz")
                || iconosEstablecidos[2].equals("Cruz") && iconosEstablecidos[4].equals("Cruz") && iconosEstablecidos[6].equals("Cruz")) {

            // Actualizar variable booleana
            juegoEnCurso = false;

            // Mostrar mensaje de victoria
            JOptionPane.showMessageDialog(this, "¡Has ganado!", "Victoria", JOptionPane.INFORMATION_MESSAGE);

            // Llamar a un método para comprobar si se quiere seguir jugando
            seguirJugando();

            // Salir del método
            return;

        } else // Comprobar si has perdido
        if (iconosEstablecidos[0].equals("Circunferencia") && iconosEstablecidos[1].equals("Circunferencia") && iconosEstablecidos[2].equals("Circunferencia")
                || iconosEstablecidos[3].equals("Circunferencia") && iconosEstablecidos[4].equals("Circunferencia") && iconosEstablecidos[5].equals("Circunferencia")
                || iconosEstablecidos[6].equals("Circunferencia") && iconosEstablecidos[7].equals("Circunferencia") && iconosEstablecidos[8].equals("Circunferencia")
                || iconosEstablecidos[0].equals("Circunferencia") && iconosEstablecidos[3].equals("Circunferencia") && iconosEstablecidos[6].equals("Circunferencia")
                || iconosEstablecidos[1].equals("Circunferencia") && iconosEstablecidos[4].equals("Circunferencia") && iconosEstablecidos[7].equals("Circunferencia")
                || iconosEstablecidos[2].equals("Circunferencia") && iconosEstablecidos[5].equals("Circunferencia") && iconosEstablecidos[8].equals("Circunferencia")
                || iconosEstablecidos[0].equals("Circunferencia") && iconosEstablecidos[4].equals("Circunferencia") && iconosEstablecidos[8].equals("Circunferencia")
                || iconosEstablecidos[2].equals("Circunferencia") && iconosEstablecidos[4].equals("Circunferencia") && iconosEstablecidos[6].equals("Circunferencia")) {

            // Actualizar variable booleana
            juegoEnCurso = false;

            // Mostrar mensaje de derrota
            JOptionPane.showMessageDialog(this, "¡Has perdido!", "Derrota", JOptionPane.INFORMATION_MESSAGE);

            // Llamar a un método para comprobar si se quiere seguir jugando
            seguirJugando();

            // Salir del método
            return;

        } else if (contadorMarcados == 9) {

            // Mostrar mensaje de empate
            JOptionPane.showMessageDialog(this, "¡Has empatado!", "Empate", JOptionPane.INFORMATION_MESSAGE);

            // Llamar a un método para comprobar si se quiere seguir jugando
            seguirJugando();

        }

    }

    private void seguirJugando() {

        // Crear JOptionPane de opción
        int opcion = JOptionPane.showConfirmDialog(this, "¿Quieres jugar de nuevo?", "Reiniciar Juego", JOptionPane.YES_NO_OPTION);

        // Comprobar la opción que se ha elegido
        if (opcion == JOptionPane.YES_OPTION) {

            // Cerrar actual
            dispose();

            // Crear una nueva ventana
            TresEnRaya t = new TresEnRaya();

            // Hacerla visible
            t.setVisible(true);

        } else if (opcion == JOptionPane.NO_OPTION) {

            // Cerrar la interfaz
            dispose();

        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
